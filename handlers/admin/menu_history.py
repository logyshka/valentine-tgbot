import keyboards.inline.admin as kb
from utils.entities.sending import Sending
from utils.entities.user import User
from loader import dp, admin_id, logger, log_path
from aiogram.types import CallbackQuery
from filters import IsAdmin, CallEqual
from utils.entities.statistic import Statistic

@dp.callback_query_handler(CallEqual("menu_history"), IsAdmin())
async def menu_history(call: CallbackQuery):
    await call.message.edit_text(f"<b>üÜî –í–∞—à id: <code>{call.from_user.id}</code></b>\n\n"
                                 "<b>üóÉ –í—ã –∞–¥–º–∏–Ω, –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–≥—Ä—É–∂–∞—Ç—å –ø–æ–ª–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ</b>",
                                 reply_markup=kb.menu_history())

@dp.callback_query_handler(CallEqual("menu_history_users"), IsAdmin())
async def menu_history_users(call: CallbackQuery):
    await call.message.answer(f"<b>‚úÖ –ù–∞—á–∞–ª–∞—Å—å –≤—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î</b>\n\n"
                              f"<i>‚ö† –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≥—Ä—É–∑–∏—Ç—å<code> {len(User.users())} —Å—Ç—Ä–æ–∫</code>, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!</i>")
    await call.message.answer_document(document=User.collect_data((await call.bot.me).username),
                                       caption="<b>‚úÖ –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –ë–î!</b>")

@dp.callback_query_handler(CallEqual("menu_history_sendings"), IsAdmin())
async def menu_history_users(call: CallbackQuery):
    await call.message.answer(f"<b>‚úÖ –ù–∞—á–∞–ª–∞—Å—å –≤—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î</b>\n\n"
                              f"<i>‚ö† –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–≥—Ä—É–∑–∏—Ç—å<code> {len(Sending.sendings())} —Å—Ç—Ä–æ–∫</code>, —ç—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!</i>")
    await call.message.answer_document(document=Sending.collect_data((await call.bot.me).username),
                                       caption="<b>‚úÖ –î–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –ë–î!</b>")


@dp.callback_query_handler(CallEqual("menu_history_general"), IsAdmin())
async def menu_history_users(call: CallbackQuery):
    await call.message.answer(f"<b>‚úÖ –ù–∞—á–∞–ª–∞—Å—å –≤—ã–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–∑ –ë–î</b>\n\n"
                              f"<i>‚ö† –°–±–æ—Ä –ø–æ–ª–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!</i>")
    await call.message.answer_document(document=Statistic.collect_general(),
                                       caption="<b>‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –ë–î!</b>")

@dp.callback_query_handler(CallEqual("menu_history_income"), IsAdmin())
async def menu_history_users(call: CallbackQuery):
    await call.message.answer(f"<b>‚úÖ –ù–∞—á–∞–ª–∞—Å—å –≤—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î</b>\n\n"
                              f"<i>‚ö† –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!</i>")
    await call.message.answer_document(document=Statistic.collect_income(),
                                       caption="<b>‚úÖ –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏—Ö–æ–¥–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –ë–î!</b>")

@dp.callback_query_handler(CallEqual("menu_history_log"), IsAdmin())
async def menu_history_users(call: CallbackQuery):
    await call.message.answer(f"<b>‚úÖ –ù–∞—á–∞–ª–∞—Å—å –≤—ã–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ë–î</b>\n\n"
                              f"<i>‚ö† –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏!</i>")
    with open(log_path, "rb") as log_file:
        await call.message.answer_document(document=log_file,
                                           caption="<b>‚úÖ –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–∏—Ö–æ–¥–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É—Å–ø–µ—à–Ω–æ –≤—ã–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –ë–î!</b>")